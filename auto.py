import port_scanner
from web_scanner import WebScanner
from ftp_bruteforcer import FTPBruteForcer

def main():
    ports = [21, 22, 80]
    host = "192.168.56.103"

    try:
        print("Nmap scan will start, please wait!")
        nmap_scan = port_scanner.Nmap(host, ports)
        # print(nmap_scan.scanner._scan_result) Debug purpose

        hostnames = nmap_scan.get_hostnames()
        if hostnames:
            print(f"Hostnames for {host}: {', '.join(hostnames)}")
        else:
            print(f"No hostnames found for {host}")
        print()

        os_info = nmap_scan.get_os()
        if os_info:
            for os_estimation in os_info:
                print(
                    f"OS Estimation: {os_estimation['name']} (Accuracy: {os_estimation['accuracy']}%)"
                )
                if "type" in os_estimation:
                    print(
                        f"  Type: {os_estimation['type']}, Vendor: {os_estimation['vendor']}, OS Family: {os_estimation['osfamily']}, OS Generation: {os_estimation['osgen']}"
                    )
        else:
            print("OS detection not available")

        print()
        for port in ports:
            service_info = nmap_scan.get_service_version(port)
            if service_info:
                print(
                    f"Service Information for port {port}: {service_info.get('service')}, Version: {service_info.get('version')}"
                )
            else:
                print(f"No service version information available for port {port}")

            cves = nmap_scan.get_cves(port)
            if cves:
                print(f"CVEs for port {port}:")
                for cve in cves:
                    print(f"  {cve['id']}")
                    if cve["url"]:
                        print(f"    URL: {cve['url']}")
            else:
                print(f"No CVEs found for port {port}.")
            print()

        print("Starting FTP brute force...")
        bruteforcer = FTPBruteForcer(host=host, user="root")
        bruteforcer.brute_force("wordlists.txt")
        print("FTP brute force finished.")

    except port_scanner.PortScannerError as error:
        print(error)


if __name__ == "__main__":
    main()
    scanner = WebScanner(
        domain="balgogan-kerago.eu",
        wordlist_path="wordlists/directory-list-2.3-medium.txt",
        user_pass_file="wordlists/user_pass.txt",
        url_file="urls.txt",
        output_sqlmap_file="output_sqlmap.txt",
        output_file="scan_results.txt",
    )
    scanner.run()
