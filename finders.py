import subprocess

def gobuster_scan(target):
    """
    Fonction pour exécuter un scan Gobuster sur la cible spécifiée.
    
    Args:
    - target: L'URL de la cible au format http://ip:3000.
    
    Returns:
    - directories: Une liste des répertoires trouvés par Gobuster.
    """
    print("Exécution de Gobuster...")
    process = subprocess.Popen(["gobuster", "dir", "-u", target, "-w", "./directory-list-2.3-medium.txt" , "-e"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, error = process.communicate()
    directories = output.decode().split("\n")[:-1]  # Supprimer la dernière chaîne vide
    print("Gobuster terminé.")
    return directories

def nikto_scan(ip):
    """
    Fonction pour exécuter un scan Nikto sur l'adresse IP spécifiée.
    
    Args:
    - ip: L'adresse IP de la cible à scanner avec Nikto.
    """
    print("Exécution de Nikto...")
    subprocess.run(["nikto", "-h", ip])
    print("Nikto terminé.")

def main():
    # Adresse de la cible à scanner
    target = "http://172.25.0.3:3000/#/"
    ip_address = "172.25.0.3"

    # Exécution du scan Gobuster
    directories = gobuster_scan(target)

    # Affichage des répertoires trouvés
    print("Répertoires trouvés par Gobuster :")
    for directory in directories:
        print(directory)

    # Exécution du scan Nikto
    nikto_scan(ip_address)

if __name__ == "__main__":
    main()
